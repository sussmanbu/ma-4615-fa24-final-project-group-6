{
  "hash": "4f7165e7f2d82da7b25814de574b9847",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Blog Post 3\"\nauthor: \"\"\ndate: \"2024-10-27\"\ndate-modified: \"2024-10-27\"\ndraft: FALSE\n---\n\n\nWe continued cleaning our dataset and identifying variables that should be cleaned. These variables include categories for identity, mental and physical health, life habits, information about substance use, adverse childhood experiences and chronic health conditions. Besides changing some string variables to meaningful representations, we also changed some numerical variables to usable values that we can use in analysis methods such as linear regression.\n\n::: {.cell}\n\n```{.r .cell-code}\n# exercise frequency per month\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(haven)\ndata2 <- read_xpt(\"dataset-ignore/LLCP2023.XPT\")|>\n  filter(DISPCODE == 1100)|>\n mutate(EXEROFT1 = case_when(EXEROFT1 %in% c(77,99) ~ NA,\n                              EXEROFT1 >= 101 & EXEROFT1 <= 199 ~ (EXEROFT1 - 100)*4.33, \n                              EXEROFT1 >= 201 & EXEROFT1 <= 299 ~ EXEROFT1 - 200),\n         EXEROFT2 = case_when(EXEROFT2 == 77 ~ 0,\n                              EXEROFT2 == 99 ~ 0,\n                              EXEROFT2 >= 101 & EXEROFT2 <= 199 ~ (EXEROFT2 - 100)*4.33, \n                              EXEROFT2 >= 201 & EXEROFT2 <= 299 ~ EXEROFT2 - 200),\n         Exercise_frequency = EXEROFT1 + EXEROFT2)|>\n  select(Exercise_frequency)\nprint(data2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 356,261 × 1\n   Exercise_frequency\n                <dbl>\n 1               NA  \n 2               NA  \n 3               NA  \n 4               NA  \n 5               39.0\n 6               NA  \n 7               NA  \n 8               NA  \n 9               NA  \n10               NA  \n# ℹ 356,251 more rows\n```\n\n\n:::\n:::\n\n\nWe understand that our dataset is large so we may need to clean more variables in the future if needed. \n\nThis week, we also intended to create more specific research questions for our dataset, and are in the process of thinking about them. For instance, do factors like life habits, race, and insurance status contribute to poorer health outcomes? Since there is so much to focus on it will take time to come up with more detailed questions, but this is our general direction.\n\n\nFor this survey, proxies were unavailable, and it was only accessible to those that had phones, and this excludes specific groups of people (disabled, hearing disorders, mental disabilities, any disability that requires alternate forms of communication) from the data, especially since this is healthcare data, it's important to be as inclusive as possible. This data could be misused if we are cherry-picking data. It is important to incorporate sub-questions from the data sections so there is an accurate breadth for the questions we are asking. Depending on what variables you include it is possible to skew the information or represent it inaccurately. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}